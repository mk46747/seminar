@model NannyApp.Model.ParentOffer

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_mytemplate_nanny.cshtml";
}

<div class="form-style-8">
    <h2>Edit your offer - giving services</h2>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <table>
            <tr>
                <td>
                    @Html.LabelFor(model => model.City)
                    @Html.EditorFor(model => model.City)
                </td>
                <td>
                    @Html.LabelFor(model => model.Address)
                    @Html.EditorFor(model => model.Address)
                </td>
            </tr>
        </table>
        <table>
            <tr>
                @{
        List<SelectListItem> listItems = new List<SelectListItem>();
        listItems.Add(new SelectListItem
                {
                    Text = "My place",
                    Value = "PARENTS_PLACE"
                });
        listItems.Add(new SelectListItem
                {
                    Text = "Nanny's place",
                    Value = "NANNYS_PLACE",
                    Selected = true
                });
                }
                @Html.LabelFor(model => model.BabySittingPlace, "Select babysitting place")
                @Html.DropDownListFor(model => model.BabySittingPlace, listItems, "-- Select --")
            </tr>
            <tr>
                @{
                    List<SelectListItem> number = new List<SelectListItem>();
                    number.Add(new SelectListItem { Text = "1", Value = "1", Selected = true });
                    number.Add(new SelectListItem { Text = "2", Value = "2" });
                    number.Add(new SelectListItem { Text = "3", Value = "3" });
                    number.Add(new SelectListItem { Text = "4", Value = "4" });
                    number.Add(new SelectListItem { Text = "5", Value = "5" });
                }
                @Html.LabelFor(model => model.ChildrenNumber, "Select number of children")
                @Html.DropDownListFor(model => model.ChildrenNumber, number, "-- Select --")
            </tr>
            <tr>
                @{
                    List<SelectListItem> minAge = new List<SelectListItem>();
                    minAge.Add(new SelectListItem { Text = "0", Value = "0", Selected = true });
                    minAge.Add(new SelectListItem { Text = "1", Value = "1" });
                    minAge.Add(new SelectListItem { Text = "2", Value = "2" });
                    minAge.Add(new SelectListItem { Text = "3", Value = "3" });
                    minAge.Add(new SelectListItem { Text = "4", Value = "4" });
                    minAge.Add(new SelectListItem { Text = "5", Value = "5" });
                }
                @Html.LabelFor(model => model.MinChildrenAge, "Select min children age that nanny needs to take for")
                @Html.DropDownListFor(model => model.MinChildrenAge, minAge, "-- Select --")
            </tr>
            <tr>
                @{
                    List<SelectListItem> maxAge = new List<SelectListItem>();
                    maxAge.Add(new SelectListItem { Text = "1", Value = "1", Selected = true });
                    maxAge.Add(new SelectListItem { Text = "2", Value = "2" });
                    maxAge.Add(new SelectListItem { Text = "3", Value = "3" });
                    maxAge.Add(new SelectListItem { Text = "4", Value = "4" });
                    maxAge.Add(new SelectListItem { Text = "5", Value = "5" });
                    maxAge.Add(new SelectListItem { Text = "6", Value = "6" });
                    maxAge.Add(new SelectListItem { Text = "7", Value = "7" });
                    maxAge.Add(new SelectListItem { Text = "8", Value = "8" });
                    maxAge.Add(new SelectListItem { Text = "9", Value = "9" });
                    maxAge.Add(new SelectListItem { Text = "10", Value = "10" });
                    maxAge.Add(new SelectListItem { Text = "11", Value = "11" });
                    maxAge.Add(new SelectListItem { Text = "12", Value = "12" });
                    maxAge.Add(new SelectListItem { Text = "13", Value = "13" });
                }
                @Html.LabelFor(model => model.MaxChildrenAge, "Select max children age that nanny needs to take for")
                @Html.DropDownListFor(model => model.MaxChildrenAge, maxAge, "-- Select --")
            </tr>

            <tr>
                @Html.LabelFor(model => model.Price, "Write price per hour (in $)")
                @Html.EditorFor(model => model.Price)
            </tr>
            <tr>
                @Html.LabelFor(model => model.StartTime, "Select date when you need that nanny start")
                @Html.TextBoxFor(model => model.StartTime, new { type = "date" })
            </tr>
            <tr>
                @Html.LabelFor(model => model.EndTime, "Select date until when you need nanny")
                @Html.TextBoxFor(model => model.EndTime, new { type = "date" })
            </tr>
            <tr>
                @Html.LabelFor(model => model.Experience, "Write which experience you ask from nanny")
                @Html.EditorFor(model => model.Experience)
            </tr>
            <tr>
                @Html.LabelFor(model => model.Notice, "Write notice if you have something to add")
                @Html.EditorFor(model => model.Notice)
            </tr>
            @Html.HiddenFor(model => model.Opened, new { Value = "true" })
            <tr>
                @Html.LabelFor(model => model.Deadline, "Select date until when nanny can apply for your offer (DL for your offer)")
                @Html.TextBoxFor(model => model.Deadline, new { type = "date" })
            </tr>
            <tr>
                <td></td>
                <td><input type="submit" value="Save your offer" /></td>
            </tr>
        </table>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}